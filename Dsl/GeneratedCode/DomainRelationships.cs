//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using DslModeling = global::Microsoft.VisualStudio.Modeling;
using DslDesign = global::Microsoft.VisualStudio.Modeling.Design;
namespace UPM_IPS.JDCCCAJDOMDCMProyectoIPS
{
	/// <summary>
	/// DomainRelationship TapizVentanasHasVentanaPrincipal
	/// Description for
	/// UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal.DisplayName", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal.Description", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("776754ac-7a4e-4bb6-879d-097ab1922a6f")]
	public partial class TapizVentanasHasVentanaPrincipal : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// TapizVentanasHasVentanaPrincipal domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x776754ac, 0x7a4e, 0x4bb6, 0x87, 0x9d, 0x09, 0x7a, 0xb1, 0x92, 0x2a, 0x6f);
	
				
		/// <summary>
		/// Constructor
		/// Creates a TapizVentanasHasVentanaPrincipal link in the same Partition as the given TapizVentanas
		/// </summary>
		/// <param name="source">TapizVentanas to use as the source of the relationship.</param>
		/// <param name="target">VentanaPrincipal to use as the target of the relationship.</param>
		public TapizVentanasHasVentanaPrincipal(TapizVentanas source, VentanaPrincipal target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(TapizVentanasHasVentanaPrincipal.TapizVentanasDomainRoleId, source), new DslModeling::RoleAssignment(TapizVentanasHasVentanaPrincipal.VentanaPrincipalDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizVentanasHasVentanaPrincipal(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizVentanasHasVentanaPrincipal(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizVentanasHasVentanaPrincipal(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizVentanasHasVentanaPrincipal(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region TapizVentanas domain role code
		
		/// <summary>
		/// TapizVentanas domain role Id.
		/// </summary>
		public static readonly global::System.Guid TapizVentanasDomainRoleId = new global::System.Guid(0x9ddad25d, 0xdac5, 0x4f07, 0xb0, 0xa7, 0xfc, 0xe2, 0x48, 0x70, 0x5f, 0x45);
		
		/// <summary>
		/// DomainRole TapizVentanas
		/// Description for
		/// UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal.TapizVentanas
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal/TapizVentanas.DisplayName", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal/TapizVentanas.Description", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "VentanaPrincipal", PropertyDisplayNameKey="UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal/TapizVentanas.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroOne)]
		[DslModeling::DomainObjectId("9ddad25d-dac5-4f07-b0a7-fce248705f45")]
		public virtual TapizVentanas TapizVentanas
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (TapizVentanas)DslModeling::DomainRoleInfo.GetRolePlayer(this, TapizVentanasDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TapizVentanasDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access TapizVentanas of a VentanaPrincipal
		/// <summary>
		/// Gets TapizVentanas.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static TapizVentanas GetTapizVentanas(VentanaPrincipal element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, VentanaPrincipalDomainRoleId) as TapizVentanas;
		}
		
		/// <summary>
		/// Sets TapizVentanas.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetTapizVentanas(VentanaPrincipal element, TapizVentanas newTapizVentanas)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, VentanaPrincipalDomainRoleId, newTapizVentanas);
		}
		#endregion
		#region VentanaPrincipal domain role code
		
		/// <summary>
		/// VentanaPrincipal domain role Id.
		/// </summary>
		public static readonly global::System.Guid VentanaPrincipalDomainRoleId = new global::System.Guid(0xad1f753c, 0xba53, 0x4033, 0xb0, 0x74, 0x78, 0x36, 0x47, 0x14, 0x0f, 0xe9);
		
		/// <summary>
		/// DomainRole VentanaPrincipal
		/// Description for
		/// UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal.VentanaPrincipal
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal/VentanaPrincipal.DisplayName", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal/VentanaPrincipal.Description", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "TapizVentanas", PropertyDisplayNameKey="UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal/VentanaPrincipal.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("ad1f753c-ba53-4033-b074-783647140fe9")]
		public virtual VentanaPrincipal VentanaPrincipal
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (VentanaPrincipal)DslModeling::DomainRoleInfo.GetRolePlayer(this, VentanaPrincipalDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VentanaPrincipalDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access VentanaPrincipal of a TapizVentanas
		/// <summary>
		/// Gets VentanaPrincipal.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static VentanaPrincipal GetVentanaPrincipal(TapizVentanas element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, TapizVentanasDomainRoleId) as VentanaPrincipal;
		}
		
		/// <summary>
		/// Sets VentanaPrincipal.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetVentanaPrincipal(TapizVentanas element, VentanaPrincipal newVentanaPrincipal)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, TapizVentanasDomainRoleId, newVentanaPrincipal);
		}
		#endregion
		#region TapizVentanas link accessor
		/// <summary>
		/// Get the TapizVentanasHasVentanaPrincipal link to a TapizVentanas.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal GetLinkToVentanaPrincipal (global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanas tapizVentanasInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal>(tapizVentanasInstance, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal.TapizVentanasDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of TapizVentanas not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region VentanaPrincipal link accessor
		/// <summary>
		/// Get the TapizVentanasHasVentanaPrincipal link to a VentanaPrincipal.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal GetLinkToTapizVentanas (global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.VentanaPrincipal ventanaPrincipalInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal>(ventanaPrincipalInstance, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal.VentanaPrincipalDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of VentanaPrincipal not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region TapizVentanasHasVentanaPrincipal instance accessors
		
		/// <summary>
		/// Get any TapizVentanasHasVentanaPrincipal links between a given TapizVentanas and a VentanaPrincipal.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal> GetLinks( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanas source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.VentanaPrincipal target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal>();
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal>(source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal.TapizVentanasDomainRoleId);
			foreach ( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal link in links )
			{
				if ( target.Equals(link.VentanaPrincipal) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one TapizVentanasHasVentanaPrincipal link between a given TapizVentanasand a VentanaPrincipal.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal GetLink( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanas source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.VentanaPrincipal target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal>(source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal.TapizVentanasDomainRoleId);
			foreach ( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaPrincipal link in links )
			{
				if ( target.Equals(link.VentanaPrincipal) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.JDCCCAJDOMDCMProyectoIPS
{
	/// <summary>
	/// DomainRelationship TapizVentanasHasVentanaSecundaria
	/// Description for
	/// UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria.DisplayName", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria.Description", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("8c05aeeb-5334-4d36-8dc7-5785219aac3b")]
	public partial class TapizVentanasHasVentanaSecundaria : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// TapizVentanasHasVentanaSecundaria domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x8c05aeeb, 0x5334, 0x4d36, 0x8d, 0xc7, 0x57, 0x85, 0x21, 0x9a, 0xac, 0x3b);
	
				
		/// <summary>
		/// Constructor
		/// Creates a TapizVentanasHasVentanaSecundaria link in the same Partition as the given TapizVentanas
		/// </summary>
		/// <param name="source">TapizVentanas to use as the source of the relationship.</param>
		/// <param name="target">VentanaSecundaria to use as the target of the relationship.</param>
		public TapizVentanasHasVentanaSecundaria(TapizVentanas source, VentanaSecundaria target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(TapizVentanasHasVentanaSecundaria.TapizVentanasDomainRoleId, source), new DslModeling::RoleAssignment(TapizVentanasHasVentanaSecundaria.VentanaSecundariaDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizVentanasHasVentanaSecundaria(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizVentanasHasVentanaSecundaria(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizVentanasHasVentanaSecundaria(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizVentanasHasVentanaSecundaria(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region TapizVentanas domain role code
		
		/// <summary>
		/// TapizVentanas domain role Id.
		/// </summary>
		public static readonly global::System.Guid TapizVentanasDomainRoleId = new global::System.Guid(0xbfabb444, 0x16ba, 0x4280, 0x9e, 0x2f, 0x61, 0xc9, 0x72, 0x5f, 0x87, 0x51);
		
		/// <summary>
		/// DomainRole TapizVentanas
		/// Description for
		/// UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria.TapizVentanas
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria/TapizVentanas.DisplayName", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria/TapizVentanas.Description", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "VentanaSecundaria", PropertyDisplayNameKey="UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria/TapizVentanas.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("bfabb444-16ba-4280-9e2f-61c9725f8751")]
		public virtual TapizVentanas TapizVentanas
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (TapizVentanas)DslModeling::DomainRoleInfo.GetRolePlayer(this, TapizVentanasDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TapizVentanasDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access TapizVentanas of a VentanaSecundaria
		/// <summary>
		/// Gets TapizVentanas.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static TapizVentanas GetTapizVentanas(VentanaSecundaria element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, VentanaSecundariaDomainRoleId) as TapizVentanas;
		}
		
		/// <summary>
		/// Sets TapizVentanas.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetTapizVentanas(VentanaSecundaria element, TapizVentanas newTapizVentanas)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, VentanaSecundariaDomainRoleId, newTapizVentanas);
		}
		#endregion
		#region VentanaSecundaria domain role code
		
		/// <summary>
		/// VentanaSecundaria domain role Id.
		/// </summary>
		public static readonly global::System.Guid VentanaSecundariaDomainRoleId = new global::System.Guid(0xf61f9096, 0x9d1e, 0x4aca, 0xbf, 0xd6, 0x3c, 0x22, 0xf4, 0x4f, 0xac, 0xe5);
		
		/// <summary>
		/// DomainRole VentanaSecundaria
		/// Description for
		/// UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria.VentanaSecundaria
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria/VentanaSecundaria.DisplayName", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria/VentanaSecundaria.Description", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "TapizVentanas", PropertyDisplayNameKey="UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria/VentanaSecundaria.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("f61f9096-9d1e-4aca-bfd6-3c22f44face5")]
		public virtual VentanaSecundaria VentanaSecundaria
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (VentanaSecundaria)DslModeling::DomainRoleInfo.GetRolePlayer(this, VentanaSecundariaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VentanaSecundariaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access VentanaSecundaria of a TapizVentanas
		/// <summary>
		/// Gets a list of VentanaSecundaria.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<VentanaSecundaria> GetVentanaSecundaria(TapizVentanas element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<VentanaSecundaria>, VentanaSecundaria>(element, TapizVentanasDomainRoleId);
		}
		#endregion
		#region TapizVentanas link accessor
		/// <summary>
		/// Get the list of TapizVentanasHasVentanaSecundaria links to a TapizVentanas.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria> GetLinksToVentanaSecundaria ( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanas tapizVentanasInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria>(tapizVentanasInstance, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria.TapizVentanasDomainRoleId);
		}
		#endregion
		#region VentanaSecundaria link accessor
		/// <summary>
		/// Get the TapizVentanasHasVentanaSecundaria link to a VentanaSecundaria.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria GetLinkToTapizVentanas (global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.VentanaSecundaria ventanaSecundariaInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria>(ventanaSecundariaInstance, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria.VentanaSecundariaDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of VentanaSecundaria not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region TapizVentanasHasVentanaSecundaria instance accessors
		
		/// <summary>
		/// Get any TapizVentanasHasVentanaSecundaria links between a given TapizVentanas and a VentanaSecundaria.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria> GetLinks( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanas source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.VentanaSecundaria target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria>();
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria>(source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria.TapizVentanasDomainRoleId);
			foreach ( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria link in links )
			{
				if ( target.Equals(link.VentanaSecundaria) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one TapizVentanasHasVentanaSecundaria link between a given TapizVentanasand a VentanaSecundaria.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria GetLink( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanas source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.VentanaSecundaria target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria>(source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria.TapizVentanasDomainRoleId);
			foreach ( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasVentanaSecundaria link in links )
			{
				if ( target.Equals(link.VentanaSecundaria) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.JDCCCAJDOMDCMProyectoIPS
{
	/// <summary>
	/// DomainRelationship contiene
	/// Description for UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene.DisplayName", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene.Description", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("d3a2c103-f818-4bf0-80b0-3d9aaeb0ca98")]
	public partial class contiene : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// contiene domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xd3a2c103, 0xf818, 0x4bf0, 0x80, 0xb0, 0x3d, 0x9a, 0xae, 0xb0, 0xca, 0x98);
	
				
		/// <summary>
		/// Constructor
		/// Creates a contiene link in the same Partition as the given Ventana
		/// </summary>
		/// <param name="source">Ventana to use as the source of the relationship.</param>
		/// <param name="target">Menu to use as the target of the relationship.</param>
		public contiene(Ventana source, Menu target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(contiene.VentanaDomainRoleId, source), new DslModeling::RoleAssignment(contiene.MenuDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public contiene(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public contiene(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public contiene(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public contiene(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Ventana domain role code
		
		/// <summary>
		/// Ventana domain role Id.
		/// </summary>
		public static readonly global::System.Guid VentanaDomainRoleId = new global::System.Guid(0xa10ed874, 0xee96, 0x4e7b, 0xbc, 0x94, 0x4b, 0x17, 0x6f, 0x15, 0x27, 0xd0);
		
		/// <summary>
		/// DomainRole Ventana
		/// Description for UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene.Ventana
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene/Ventana.DisplayName", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene/Ventana.Description", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Menu", PropertyDisplayNameKey="UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene/Ventana.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.OneMany)]
		[DslModeling::DomainObjectId("a10ed874-ee96-4e7b-bc94-4b176f1527d0")]
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Ventana)DslModeling::DomainRoleInfo.GetRolePlayer(this, VentanaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VentanaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Ventana of a Menu
		/// <summary>
		/// Gets Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Ventana GetVentana(Menu element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, MenuDomainRoleId) as Ventana;
		}
		
		/// <summary>
		/// Sets Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetVentana(Menu element, Ventana newVentana)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, MenuDomainRoleId, newVentana);
		}
		#endregion
		#region Menu domain role code
		
		/// <summary>
		/// Menu domain role Id.
		/// </summary>
		public static readonly global::System.Guid MenuDomainRoleId = new global::System.Guid(0x583a7a75, 0xcc5f, 0x48c6, 0xa8, 0x12, 0x68, 0x8c, 0x20, 0x88, 0xec, 0xfc);
		
		/// <summary>
		/// DomainRole Menu
		/// Description for UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene.Menu
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene/Menu.DisplayName", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene/Menu.Description", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Ventana", PropertyDisplayNameKey="UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene/Menu.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("583a7a75-cc5f-48c6-a812-688c2088ecfc")]
		public virtual Menu Menu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Menu)DslModeling::DomainRoleInfo.GetRolePlayer(this, MenuDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, MenuDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Menu of a Ventana
		/// <summary>
		/// Gets a list of Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Menu> GetMenu(Ventana element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Menu>, Menu>(element, VentanaDomainRoleId);
		}
		#endregion
		#region Ventana link accessor
		/// <summary>
		/// Get the list of contiene links to a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene> GetLinksToMenu ( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.Ventana ventanaInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene>(ventanaInstance, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene.VentanaDomainRoleId);
		}
		#endregion
		#region Menu link accessor
		/// <summary>
		/// Get the contiene link to a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene GetLinkToVentana (global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.Menu menuInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene>(menuInstance, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene.MenuDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Menu not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region contiene instance accessors
		
		/// <summary>
		/// Get any contiene links between a given Ventana and a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene> GetLinks( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.Ventana source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.Menu target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene>();
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene>(source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene.VentanaDomainRoleId);
			foreach ( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene link in links )
			{
				if ( target.Equals(link.Menu) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one contiene link between a given Ventanaand a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene GetLink( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.Ventana source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.Menu target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene>(source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene.VentanaDomainRoleId);
			foreach ( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.contiene link in links )
			{
				if ( target.Equals(link.Menu) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.JDCCCAJDOMDCMProyectoIPS
{
	/// <summary>
	/// DomainRelationship navega
	/// Description for UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega.DisplayName", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega.Description", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("13aadadf-0481-47ed-be24-2575406f0064")]
	public partial class navega : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// navega domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x13aadadf, 0x0481, 0x47ed, 0xbe, 0x24, 0x25, 0x75, 0x40, 0x6f, 0x00, 0x64);
	
				
		/// <summary>
		/// Constructor
		/// Creates a navega link in the same Partition as the given Navegador
		/// </summary>
		/// <param name="source">Navegador to use as the source of the relationship.</param>
		/// <param name="target">Ventana to use as the target of the relationship.</param>
		public navega(Navegador source, Ventana target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(navega.NavegadorDomainRoleId, source), new DslModeling::RoleAssignment(navega.VentanaDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public navega(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public navega(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public navega(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public navega(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Navegador domain role code
		
		/// <summary>
		/// Navegador domain role Id.
		/// </summary>
		public static readonly global::System.Guid NavegadorDomainRoleId = new global::System.Guid(0x92f208c0, 0x0069, 0x4783, 0x82, 0x5e, 0x14, 0xd6, 0x93, 0x02, 0xaf, 0xd9);
		
		/// <summary>
		/// DomainRole Navegador
		/// Description for UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega.Navegador
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega/Navegador.DisplayName", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega/Navegador.Description", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Ventanas", PropertyDisplayNameKey="UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega/Navegador.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroOne)]
		[DslModeling::DomainObjectId("92f208c0-0069-4783-825e-14d69302afd9")]
		public virtual Navegador Navegador
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Navegador)DslModeling::DomainRoleInfo.GetRolePlayer(this, NavegadorDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, NavegadorDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Navegador of a Ventana
		/// <summary>
		/// Gets a list of Navegador.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Navegador> GetNavegador(Ventana element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Navegador>, Navegador>(element, VentanaDomainRoleId);
		}
		#endregion
		#region Ventana domain role code
		
		/// <summary>
		/// Ventana domain role Id.
		/// </summary>
		public static readonly global::System.Guid VentanaDomainRoleId = new global::System.Guid(0xc04f1399, 0x3172, 0x4c06, 0xb0, 0x3d, 0x3b, 0xed, 0xd6, 0xac, 0x23, 0xa4);
		
		/// <summary>
		/// DomainRole Ventana
		/// Description for UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega.Ventana
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega/Ventana.DisplayName", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega/Ventana.Description", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Navegador", PropertyDisplayNameKey="UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega/Ventana.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("c04f1399-3172-4c06-b03d-3bedd6ac23a4")]
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Ventana)DslModeling::DomainRoleInfo.GetRolePlayer(this, VentanaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VentanaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Ventanas of a Navegador
		/// <summary>
		/// Gets Ventanas.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Ventana GetVentanas(Navegador element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, NavegadorDomainRoleId) as Ventana;
		}
		
		/// <summary>
		/// Sets Ventanas.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetVentanas(Navegador element, Ventana newVentana)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, NavegadorDomainRoleId, newVentana);
		}
		#endregion
		#region Navegador link accessor
		/// <summary>
		/// Get the navega link to a Navegador.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega GetLinkToVentanas (global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.Navegador navegadorInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega>(navegadorInstance, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega.NavegadorDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Navegador not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region Ventana link accessor
		/// <summary>
		/// Get the list of navega links to a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega> GetLinksToNavegador ( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.Ventana ventanaInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega>(ventanaInstance, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega.VentanaDomainRoleId);
		}
		#endregion
		#region navega instance accessors
		
		/// <summary>
		/// Get any navega links between a given Navegador and a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega> GetLinks( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.Navegador source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.Ventana target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega>();
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega>(source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega.NavegadorDomainRoleId);
			foreach ( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega link in links )
			{
				if ( target.Equals(link.Ventana) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one navega link between a given Navegadorand a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega GetLink( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.Navegador source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.Ventana target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega>(source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega.NavegadorDomainRoleId);
			foreach ( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.navega link in links )
			{
				if ( target.Equals(link.Ventana) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.JDCCCAJDOMDCMProyectoIPS
{
	/// <summary>
	/// DomainRelationship despliega
	/// Description for UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega.DisplayName", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega.Description", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("0be832db-a39c-4232-8c8f-0695a9b8e7cf")]
	public partial class despliega : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// despliega domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x0be832db, 0xa39c, 0x4232, 0x8c, 0x8f, 0x06, 0x95, 0xa9, 0xb8, 0xe7, 0xcf);
	
				
		/// <summary>
		/// Constructor
		/// Creates a despliega link in the same Partition as the given Menu
		/// </summary>
		/// <param name="source">Menu to use as the source of the relationship.</param>
		/// <param name="target">ItemMenu to use as the target of the relationship.</param>
		public despliega(Menu source, ItemMenu target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(despliega.MenuDomainRoleId, source), new DslModeling::RoleAssignment(despliega.ItemMenuDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public despliega(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public despliega(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public despliega(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public despliega(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Menu domain role code
		
		/// <summary>
		/// Menu domain role Id.
		/// </summary>
		public static readonly global::System.Guid MenuDomainRoleId = new global::System.Guid(0xfa859497, 0xb558, 0x4b65, 0x8a, 0x73, 0xfc, 0x68, 0x7b, 0x2e, 0xc2, 0x04);
		
		/// <summary>
		/// DomainRole Menu
		/// Description for UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega.Menu
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega/Menu.DisplayName", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega/Menu.Description", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "ItemMenus", PropertyDisplayNameKey="UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega/Menu.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.ZeroMany)]
		[DslModeling::DomainObjectId("fa859497-b558-4b65-8a73-fc687b2ec204")]
		public virtual Menu Menu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Menu)DslModeling::DomainRoleInfo.GetRolePlayer(this, MenuDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, MenuDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Menu of a ItemMenu
		/// <summary>
		/// Gets Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Menu GetMenu(ItemMenu element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, ItemMenuDomainRoleId) as Menu;
		}
		
		/// <summary>
		/// Sets Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetMenu(ItemMenu element, Menu newMenu)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, ItemMenuDomainRoleId, newMenu);
		}
		#endregion
		#region ItemMenu domain role code
		
		/// <summary>
		/// ItemMenu domain role Id.
		/// </summary>
		public static readonly global::System.Guid ItemMenuDomainRoleId = new global::System.Guid(0x97faff8f, 0x51b5, 0x40f1, 0x8f, 0xe5, 0xd3, 0xc1, 0x2f, 0x04, 0x56, 0x00);
		
		/// <summary>
		/// DomainRole ItemMenu
		/// Description for UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega.ItemMenu
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega/ItemMenu.DisplayName", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega/ItemMenu.Description", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Menu", PropertyDisplayNameKey="UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega/ItemMenu.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("97faff8f-51b5-40f1-8fe5-d3c12f045600")]
		public virtual ItemMenu ItemMenu
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (ItemMenu)DslModeling::DomainRoleInfo.GetRolePlayer(this, ItemMenuDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, ItemMenuDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access ItemMenus of a Menu
		/// <summary>
		/// Gets a list of ItemMenus.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<ItemMenu> GetItemMenus(Menu element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<ItemMenu>, ItemMenu>(element, MenuDomainRoleId);
		}
		#endregion
		#region Menu link accessor
		/// <summary>
		/// Get the list of despliega links to a Menu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega> GetLinksToItemMenus ( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.Menu menuInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega>(menuInstance, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega.MenuDomainRoleId);
		}
		#endregion
		#region ItemMenu link accessor
		/// <summary>
		/// Get the despliega link to a ItemMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega GetLinkToMenu (global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.ItemMenu itemMenuInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega>(itemMenuInstance, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega.ItemMenuDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of ItemMenu not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region despliega instance accessors
		
		/// <summary>
		/// Get any despliega links between a given Menu and a ItemMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega> GetLinks( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.Menu source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.ItemMenu target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega>();
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega>(source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega.MenuDomainRoleId);
			foreach ( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega link in links )
			{
				if ( target.Equals(link.ItemMenu) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one despliega link between a given Menuand a ItemMenu.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega GetLink( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.Menu source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.ItemMenu target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega>(source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega.MenuDomainRoleId);
			foreach ( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.despliega link in links )
			{
				if ( target.Equals(link.ItemMenu) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.JDCCCAJDOMDCMProyectoIPS
{
	/// <summary>
	/// DomainRelationship tiene
	/// Description for UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene.DisplayName", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene.Description", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("84e7bfda-d838-40e8-9eff-619cfb16f28d")]
	public partial class tiene : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// tiene domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x84e7bfda, 0xd838, 0x40e8, 0x9e, 0xff, 0x61, 0x9c, 0xfb, 0x16, 0xf2, 0x8d);
	
				
		/// <summary>
		/// Constructor
		/// Creates a tiene link in the same Partition as the given Ventana
		/// </summary>
		/// <param name="source">Ventana to use as the source of the relationship.</param>
		/// <param name="target">Boton to use as the target of the relationship.</param>
		public tiene(Ventana source, Boton target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(tiene.VentanaDomainRoleId, source), new DslModeling::RoleAssignment(tiene.BotonDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public tiene(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public tiene(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public tiene(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public tiene(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Ventana domain role code
		
		/// <summary>
		/// Ventana domain role Id.
		/// </summary>
		public static readonly global::System.Guid VentanaDomainRoleId = new global::System.Guid(0xc1b5a3b7, 0x394d, 0x4510, 0x8d, 0xc0, 0x0b, 0xb4, 0x2d, 0x05, 0x7f, 0x71);
		
		/// <summary>
		/// DomainRole Ventana
		/// Description for UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene.Ventana
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene/Ventana.DisplayName", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene/Ventana.Description", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "Botons", PropertyDisplayNameKey="UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene/Ventana.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.OneMany)]
		[DslModeling::DomainObjectId("c1b5a3b7-394d-4510-8dc0-0bb42d057f71")]
		public virtual Ventana Ventana
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Ventana)DslModeling::DomainRoleInfo.GetRolePlayer(this, VentanaDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, VentanaDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Ventana of a Boton
		/// <summary>
		/// Gets Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static Ventana GetVentana(Boton element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, BotonDomainRoleId) as Ventana;
		}
		
		/// <summary>
		/// Sets Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetVentana(Boton element, Ventana newVentana)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, BotonDomainRoleId, newVentana);
		}
		#endregion
		#region Boton domain role code
		
		/// <summary>
		/// Boton domain role Id.
		/// </summary>
		public static readonly global::System.Guid BotonDomainRoleId = new global::System.Guid(0x16204b5b, 0xb7e4, 0x4add, 0xab, 0xd9, 0xa5, 0x3e, 0x04, 0x4e, 0xdf, 0xab);
		
		/// <summary>
		/// DomainRole Boton
		/// Description for UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene.Boton
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene/Boton.DisplayName", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene/Boton.Description", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Ventana", PropertyDisplayNameKey="UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene/Boton.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("16204b5b-b7e4-4add-abd9-a53e044edfab")]
		public virtual Boton Boton
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Boton)DslModeling::DomainRoleInfo.GetRolePlayer(this, BotonDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, BotonDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Botons of a Ventana
		/// <summary>
		/// Gets a list of Botons.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Boton> GetBotons(Ventana element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Boton>, Boton>(element, VentanaDomainRoleId);
		}
		#endregion
		#region Ventana link accessor
		/// <summary>
		/// Get the list of tiene links to a Ventana.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene> GetLinksToBotons ( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.Ventana ventanaInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene>(ventanaInstance, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene.VentanaDomainRoleId);
		}
		#endregion
		#region Boton link accessor
		/// <summary>
		/// Get the tiene link to a Boton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene GetLinkToVentana (global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.Boton botonInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene>(botonInstance, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene.BotonDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Boton not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region tiene instance accessors
		
		/// <summary>
		/// Get any tiene links between a given Ventana and a Boton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene> GetLinks( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.Ventana source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.Boton target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene>();
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene>(source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene.VentanaDomainRoleId);
			foreach ( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene link in links )
			{
				if ( target.Equals(link.Boton) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one tiene link between a given Ventanaand a Boton.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene GetLink( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.Ventana source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.Boton target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene>(source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene.VentanaDomainRoleId);
			foreach ( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.tiene link in links )
			{
				if ( target.Equals(link.Boton) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.JDCCCAJDOMDCMProyectoIPS
{
	/// <summary>
	/// DomainRelationship NavegadorReferencesFinAplicación
	/// Description for
	/// UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación.DisplayName", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación.Description", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship()]
	[DslModeling::DomainObjectId("651e9bd0-0641-4d01-99b1-8532091c9b34")]
	public partial class NavegadorReferencesFinAplicación : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// NavegadorReferencesFinAplicación domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0x651e9bd0, 0x0641, 0x4d01, 0x99, 0xb1, 0x85, 0x32, 0x09, 0x1c, 0x9b, 0x34);
	
				
		/// <summary>
		/// Constructor
		/// Creates a NavegadorReferencesFinAplicación link in the same Partition as the given Navegador
		/// </summary>
		/// <param name="source">Navegador to use as the source of the relationship.</param>
		/// <param name="target">FinAplicación to use as the target of the relationship.</param>
		public NavegadorReferencesFinAplicación(Navegador source, FinAplicación target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(NavegadorReferencesFinAplicación.NavegadorDomainRoleId, source), new DslModeling::RoleAssignment(NavegadorReferencesFinAplicación.FinAplicaciónDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public NavegadorReferencesFinAplicación(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public NavegadorReferencesFinAplicación(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public NavegadorReferencesFinAplicación(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public NavegadorReferencesFinAplicación(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region Navegador domain role code
		
		/// <summary>
		/// Navegador domain role Id.
		/// </summary>
		public static readonly global::System.Guid NavegadorDomainRoleId = new global::System.Guid(0x6f127f72, 0xe988, 0x4327, 0x99, 0x1c, 0x1b, 0xf4, 0x31, 0xc5, 0xdf, 0xe0);
		
		/// <summary>
		/// DomainRole Navegador
		/// Description for
		/// UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación.Navegador
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación/Navegador.DisplayName", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación/Navegador.Description", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "FinAplicación", PropertyDisplayNameKey="UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación/Navegador.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.ZeroOne)]
		[DslModeling::DomainObjectId("6f127f72-e988-4327-991c-1bf431c5dfe0")]
		public virtual Navegador Navegador
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (Navegador)DslModeling::DomainRoleInfo.GetRolePlayer(this, NavegadorDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, NavegadorDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access Navegador of a FinAplicación
		/// <summary>
		/// Gets a list of Navegador.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static DslModeling::LinkedElementCollection<Navegador> GetNavegador(FinAplicación element)
		{
			return GetRoleCollection<DslModeling::LinkedElementCollection<Navegador>, Navegador>(element, FinAplicaciónDomainRoleId);
		}
		#endregion
		#region FinAplicación domain role code
		
		/// <summary>
		/// FinAplicación domain role Id.
		/// </summary>
		public static readonly global::System.Guid FinAplicaciónDomainRoleId = new global::System.Guid(0xcf7a94cf, 0xc3ab, 0x4cb4, 0xa8, 0xcc, 0x7a, 0x35, 0x18, 0x3b, 0xe9, 0xa5);
		
		/// <summary>
		/// DomainRole FinAplicación
		/// Description for
		/// UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación.FinAplicación
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación/FinAplicación.DisplayName", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación/FinAplicación.Description", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "Navegador", PropertyDisplayNameKey="UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación/FinAplicación.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.OneMany)]
		[DslModeling::DomainObjectId("cf7a94cf-c3ab-4cb4-a8cc-7a35183be9a5")]
		public virtual FinAplicación FinAplicación
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (FinAplicación)DslModeling::DomainRoleInfo.GetRolePlayer(this, FinAplicaciónDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, FinAplicaciónDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access FinAplicación of a Navegador
		/// <summary>
		/// Gets FinAplicación.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static FinAplicación GetFinAplicación(Navegador element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, NavegadorDomainRoleId) as FinAplicación;
		}
		
		/// <summary>
		/// Sets FinAplicación.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetFinAplicación(Navegador element, FinAplicación newFinAplicación)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, NavegadorDomainRoleId, newFinAplicación);
		}
		#endregion
		#region Navegador link accessor
		/// <summary>
		/// Get the NavegadorReferencesFinAplicación link to a Navegador.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación GetLinkToFinAplicación (global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.Navegador navegadorInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación>(navegadorInstance, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación.NavegadorDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of Navegador not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region FinAplicación link accessor
		/// <summary>
		/// Get the list of NavegadorReferencesFinAplicación links to a FinAplicación.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación> GetLinksToNavegador ( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.FinAplicación finAplicaciónInstance )
		{
			return DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación>(finAplicaciónInstance, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación.FinAplicaciónDomainRoleId);
		}
		#endregion
		#region NavegadorReferencesFinAplicación instance accessors
		
		/// <summary>
		/// Get any NavegadorReferencesFinAplicación links between a given Navegador and a FinAplicación.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación> GetLinks( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.Navegador source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.FinAplicación target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación>();
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación>(source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación.NavegadorDomainRoleId);
			foreach ( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación link in links )
			{
				if ( target.Equals(link.FinAplicación) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one NavegadorReferencesFinAplicación link between a given Navegadorand a FinAplicación.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación GetLink( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.Navegador source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.FinAplicación target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación>(source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación.NavegadorDomainRoleId);
			foreach ( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.NavegadorReferencesFinAplicación link in links )
			{
				if ( target.Equals(link.FinAplicación) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
namespace UPM_IPS.JDCCCAJDOMDCMProyectoIPS
{
	/// <summary>
	/// DomainRelationship TapizVentanasHasFinAplicación
	/// Description for UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación
	/// </summary>
	[DslDesign::DisplayNameResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación.DisplayName", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslDesign::DescriptionResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación.Description", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
	[DslModeling::DomainModelOwner(typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel))]
	[global::System.CLSCompliant(true)]
	[DslModeling::DomainRelationship(IsEmbedding=true)]
	[DslModeling::DomainObjectId("eb80ad9d-fa2f-4e3e-b0e1-f364c4cd3d04")]
	public partial class TapizVentanasHasFinAplicación : DslModeling::ElementLink
	{
		#region Constructors, domain class Id
		
		/// <summary>
		/// TapizVentanasHasFinAplicación domain class Id.
		/// </summary>
		public static readonly new global::System.Guid DomainClassId = new global::System.Guid(0xeb80ad9d, 0xfa2f, 0x4e3e, 0xb0, 0xe1, 0xf3, 0x64, 0xc4, 0xcd, 0x3d, 0x04);
	
				
		/// <summary>
		/// Constructor
		/// Creates a TapizVentanasHasFinAplicación link in the same Partition as the given TapizVentanas
		/// </summary>
		/// <param name="source">TapizVentanas to use as the source of the relationship.</param>
		/// <param name="target">FinAplicación to use as the target of the relationship.</param>
		public TapizVentanasHasFinAplicación(TapizVentanas source, FinAplicación target)
			: base((source != null ? source.Partition : null), new DslModeling::RoleAssignment[]{new DslModeling::RoleAssignment(TapizVentanasHasFinAplicación.TapizVentanasDomainRoleId, source), new DslModeling::RoleAssignment(TapizVentanasHasFinAplicación.FinAplicaciónDomainRoleId, target)}, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizVentanasHasFinAplicación(DslModeling::Store store, params DslModeling::RoleAssignment[] roleAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="store">Store where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizVentanasHasFinAplicación(DslModeling::Store store, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(store != null ? store.DefaultPartitionForClass(DomainClassId) : null, roleAssignments, propertyAssignments)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		public TapizVentanasHasFinAplicación(DslModeling::Partition partition, params DslModeling::RoleAssignment[] roleAssignments)
			: base(partition, roleAssignments, null)
		{
		}
		
		/// <summary>
		/// Constructor
		/// </summary>
		/// <param name="partition">Partition where new link is to be created.</param>
		/// <param name="roleAssignments">List of relationship role assignments.</param>
		/// <param name="propertyAssignments">List of properties assignments to set on the new link.</param>
		public TapizVentanasHasFinAplicación(DslModeling::Partition partition, DslModeling::RoleAssignment[] roleAssignments, DslModeling::PropertyAssignment[] propertyAssignments)
			: base(partition, roleAssignments, propertyAssignments)
		{
		}
		#endregion
		#region TapizVentanas domain role code
		
		/// <summary>
		/// TapizVentanas domain role Id.
		/// </summary>
		public static readonly global::System.Guid TapizVentanasDomainRoleId = new global::System.Guid(0x45edfea3, 0x543a, 0x45b3, 0xae, 0xe5, 0x84, 0xaf, 0x09, 0x88, 0x99, 0xd9);
		
		/// <summary>
		/// DomainRole TapizVentanas
		/// Description for
		/// UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación.TapizVentanas
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación/TapizVentanas.DisplayName", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación/TapizVentanas.Description", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Source, PropertyName = "FinAplicación", PropertyDisplayNameKey="UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación/TapizVentanas.PropertyDisplayName",  PropagatesCopy = DslModeling::PropagatesCopyOption.PropagatesCopyToLinkAndOppositeRolePlayer, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("45edfea3-543a-45b3-aee5-84af098899d9")]
		public virtual TapizVentanas TapizVentanas
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (TapizVentanas)DslModeling::DomainRoleInfo.GetRolePlayer(this, TapizVentanasDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, TapizVentanasDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access TapizVentanas of a FinAplicación
		/// <summary>
		/// Gets TapizVentanas.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static TapizVentanas GetTapizVentanas(FinAplicación element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, FinAplicaciónDomainRoleId) as TapizVentanas;
		}
		
		/// <summary>
		/// Sets TapizVentanas.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetTapizVentanas(FinAplicación element, TapizVentanas newTapizVentanas)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, FinAplicaciónDomainRoleId, newTapizVentanas);
		}
		#endregion
		#region FinAplicación domain role code
		
		/// <summary>
		/// FinAplicación domain role Id.
		/// </summary>
		public static readonly global::System.Guid FinAplicaciónDomainRoleId = new global::System.Guid(0x1afc5f4f, 0x2fbe, 0x4013, 0xaa, 0x9c, 0x9b, 0x97, 0x66, 0x89, 0xb0, 0x0a);
		
		/// <summary>
		/// DomainRole FinAplicación
		/// Description for
		/// UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación.FinAplicación
		/// </summary>
		[DslDesign::DisplayNameResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación/FinAplicación.DisplayName", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslDesign::DescriptionResource("UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación/FinAplicación.Description", typeof(global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.JDCCCAJDOMDCMProyectoIPSDomainModel), "UPM_IPS.JDCCCAJDOMDCMProyectoIPS.GeneratedCode.DomainModelResx")]
		[DslModeling::DomainRole(DslModeling::DomainRoleOrder.Target, PropertyName = "TapizVentanas", PropertyDisplayNameKey="UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación/FinAplicación.PropertyDisplayName", PropagatesDelete = true,  PropagatesCopy = DslModeling::PropagatesCopyOption.DoNotPropagateCopy, Multiplicity = DslModeling::Multiplicity.One)]
		[DslModeling::DomainObjectId("1afc5f4f-2fbe-4013-aa9c-9b976689b00a")]
		public virtual FinAplicación FinAplicación
		{
			[global::System.Diagnostics.DebuggerStepThrough]
			get
			{
				return (FinAplicación)DslModeling::DomainRoleInfo.GetRolePlayer(this, FinAplicaciónDomainRoleId);
			}
			[global::System.Diagnostics.DebuggerStepThrough]
			set
			{
				DslModeling::DomainRoleInfo.SetRolePlayer(this, FinAplicaciónDomainRoleId, value);
			}
		}
				
		#endregion
		#region Static methods to access FinAplicación of a TapizVentanas
		/// <summary>
		/// Gets FinAplicación.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static FinAplicación GetFinAplicación(TapizVentanas element)
		{
			return DslModeling::DomainRoleInfo.GetLinkedElement(element, TapizVentanasDomainRoleId) as FinAplicación;
		}
		
		/// <summary>
		/// Sets FinAplicación.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static void SetFinAplicación(TapizVentanas element, FinAplicación newFinAplicación)
		{
			DslModeling::DomainRoleInfo.SetLinkedElement(element, TapizVentanasDomainRoleId, newFinAplicación);
		}
		#endregion
		#region TapizVentanas link accessor
		/// <summary>
		/// Get the TapizVentanasHasFinAplicación link to a TapizVentanas.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación GetLinkToFinAplicación (global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanas tapizVentanasInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación>(tapizVentanasInstance, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación.TapizVentanasDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of TapizVentanas not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region FinAplicación link accessor
		/// <summary>
		/// Get the TapizVentanasHasFinAplicación link to a FinAplicación.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación GetLinkToTapizVentanas (global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.FinAplicación finAplicaciónInstance)
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación>(finAplicaciónInstance, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación.FinAplicaciónDomainRoleId);
			global::System.Diagnostics.Debug.Assert(links.Count <= 1, "Multiplicity of FinAplicación not obeyed.");
			if ( links.Count == 0 )
			{
				return null;
			}
			else
			{
				return links[0];
			}
		}
		#endregion
		#region TapizVentanasHasFinAplicación instance accessors
		
		/// <summary>
		/// Get any TapizVentanasHasFinAplicación links between a given TapizVentanas and a FinAplicación.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::System.Collections.ObjectModel.ReadOnlyCollection<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación> GetLinks( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanas source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.FinAplicación target )
		{
			global::System.Collections.Generic.List<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación> outLinks = new global::System.Collections.Generic.List<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación>();
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación>(source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación.TapizVentanasDomainRoleId);
			foreach ( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación link in links )
			{
				if ( target.Equals(link.FinAplicación) )
				{
					outLinks.Add(link);
				}
			}
			return outLinks.AsReadOnly();
		}
		/// <summary>
		/// Get the one TapizVentanasHasFinAplicación link between a given TapizVentanasand a FinAplicación.
		/// </summary>
		[global::System.Diagnostics.DebuggerStepThrough]
		[global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1011")]
		public static global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación GetLink( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanas source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.FinAplicación target )
		{
			global::System.Collections.Generic.IList<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación> links = DslModeling::DomainRoleInfo.GetElementLinks<global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación>(source, global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación.TapizVentanasDomainRoleId);
			foreach ( global::UPM_IPS.JDCCCAJDOMDCMProyectoIPS.TapizVentanasHasFinAplicación link in links )
			{
				if ( target.Equals(link.FinAplicación) )
				{
					return link;
				}
			}
			return null;
		}
		
		#endregion
	}
}
